<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.3/font/bootstrap-icons.min.css"
        integrity="sha512-dPXYcDub/aeb08c63jRq/k6GaKccl256JQy/AnOq7CAnEZ9FzSL9wSbcZkMp4R26vBsMLFYH4kQ67/bbV8XaCQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
    <div class="container pt-5">
        <div class="row">
            <div class="col col-12">
                <p class="h2">Community</p>
            </div>
        </div>

        <div class="row">
            <form action="/community" method="POST" class="form form-control">
                <label for="title">Title:</label>
                <br>
                <input type="text" id="title" name="title">
                <br>
                <label for="content">Content:</label>
                <br>
                <textarea name="content" id="content" cols="60" rows="10"></textarea>
                <br>
                <button class="btn-primary btn">Submit</button>

            </form>
        </div>
        <br>
        <br>
        <br>
        <button id="showPostsBtn" class="btn btn-primary">ShowPosts</button>

        <div class="row">

            <div class="col-col-12 d-none" id="postsContainer">


            </div>
        </div>
    </div>
</body>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const showPostsBtn = document.getElementById("showPostsBtn")
        console.log(showPostsBtn);
        const postsContainer = document.getElementById('postsContainer');

        showPostsBtn.addEventListener('click', function () {

            postsContainer.classList.toggle('d-none')
        })


        // Function to fetch all posts from the server
        function fetchPosts() {
            fetch('/posts')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch posts');
                    }
                    return response.json();
                })
                .then((posts) => {
                    console.log(posts);
                    // Clear existing posts before adding new ones
                    postsContainer.innerHTML = '';
                    posts.forEach((post) => {
                        //     const postElement = document.createElement('div');
                        //     postElement.classList.add('post');
                        //     postElement.innerHTML =
                        //         `
                        // <div class="row">
                        //     <div class="col col-1"> 
                        //         <h2> ${post.id}</h2>
                        // </div>
                        //     <div class="col col-2"> 
                        //         <h2>Title: ${post.title}</h2>
                        // </div>

                        //     <div class="col col-9"> 
                        //     <p>Content ${post.content}</p>
                        // </div>
                        // </div>
                        // `;
                        //     postsContainer.appendChild(postElement)
                        const postElement = createPostElement(post);
                        postsContainer.appendChild(postElement);
                        fetchComments(post.id)
                    })
                })
                .catch((error) => {
                    console.error('Error Fetching posts: ', error);
                    postsContainer.innerHTML = '<p>Error fetching posts please try again later </p>'
                });
        }
        // fetchPosts(); // dummy test1




        // // logic for adding comments

        function createPostElement(post) {
            const postElement = document.createElement('div')
            postElement.classList.add('post');

            postElement.innerHTML =
                `
                <h2>${post.title} </h2>
                <h2>${post.content} </h2>
                <form class="commentForm">
                    <input type="hidden" name="postId" value="${post.id}" />
                    <input type="text" name="commentContent" placeholder= "Add a comment" />
                    <button type="submit"> Add Comment </button>
                </form>
                <div class="commentsContainer"> </>
            `;

            const commentForm = postElement.querySelector('.commentForm');
            const commentsContainer = postElement.querySelector('.commentsContainer');

            // Event Listener for comment form submission

            commentForm.addEventListener('submit', event => {
                event.preventDefault();

                const formData = new FormData(commentForm);
                const commentContent = formData.get('commentContent');
                const postId = formData.get('postId');
                addComment(postId, commentContent);
            });
            return postElement;

        }

        // function to fetch comments for the current post
        function fetchComments(postId) {
            // console.log(postId, "TTTT");
            // const commentsContainer = document.querySelector(`.commentsContainer[data-post_id="${postId}"]`);

            // console.log(commentsContainer, "CCCCC");
            fetch(`/posts/${postId}/comments`)
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("Failed to fetch comments");
                    }
                    return response.json();
                })
                .then((comments) => {
                    const commentsContainer = document.querySelector(`commentsContainer[data-postid="${postId}"]`)
                    console.log("Received Comments: ", comments);
                    commentsContainer.innerHTML = "";
                    comments.forEach((comment) => {
                        console.log(comment, "comment");
                        const commentElement = document.createElement("div");
                        commentElement.classList.add("comment");
                        // /// dummy test 2
                        // commentElement.textContent = comment.content;
                        commentElement.textContent = `${comment.username}: ${comment.comment_content}`;
                        commentsContainer.appendChild(commentElement);
                    })
                })
                .catch((error) => {
                    console.error("Error fetching comments: ", error);
                    commentsContainer.innerHTML =
                        "<p>Error fetching comments. Please try again....</p>"
                })


        }

        // // Function to add a comment to the current post
        console.log("testing");
        function addComment(postId, commentContent) {
            fetch('/comments', {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ postId, content: commentContent })
            })
                // .then(response => {
                //     if (!response.ok) {
                //         throw new Error('Failed to add comment');
                //     }
                //     return response.json();
                // })
                .then(commentContent => {
                    fetchComments(postId);
                })
                .catch(error => {
                    console.error("Error adding comment: ", error);
                    alert("Failed to add comment. Please try again later");
                });
        }

        // Fetch comments for the current post
        // fetchComments(post.id);
        // return postElement;



        // FETCH POSTS WHEN THE PAGE LOADS
        fetchPosts();


    });
</script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
    integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
    crossorigin="anonymous"></script>

</html>